#Make sure to use spaces and not tabs for indentation
AWSTemplateFormatVersion: "2010-09-09"
Resources:
  EXPUSERROLE:
    Type : "AWS::IAM::Role"
    Properties:
      RoleName : "ExpUserRole"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "codebuild.amazonaws.com"
                - "events.amazonaws.com"
                - "scheduler.amazonaws.com"
                - "backup.amazonaws.com"
                - "apigateway.amazonaws.com"
                - "states.amazonaws.com"
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns :
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      Tags:
        - Key : "Project"
          Value : "Expense"
  EXPUPDATELAMBDAPOLICY:
    Type : "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName : "ExpUpdateLambda"
      PolicyDocument:
             Version: "2012-10-17"
             Statement:
               - Effect: "Allow"
                 Action:
                   - "lambda:CreateFunction"
                   - "lambda:InvokeFunction"
                   - "lambda:GetFunction"
                   - "lambda:ListFunctions"
                   - "lambda:UpdateFunctionCode"
                   - "lambda:PublishLayerVersion"
                   - "lambda:UpdateFunctionConfiguration"
                   - "lambda:GetFunctionConfiguration"
                   - "lambda:GetLayerVersion"
                   - "lambda:ListLayerVersions"
                   - "lambda:ListLayers"
                   - "lambda:ListTags"
                   - "iam:PassRole"
                   - "iam:GetRole"
                   - "dynamodb:PutItem"
                   - "dynamodb:GetItem"
                   - "dynamodb:UpdateItem"
                   - "dynamodb:Query"
                   - "dynamodb:GetRecords"
                   - "dynamodb:GetShardIterator"
                   - "dynamodb:DescribeStream"
                   - "dynamodb:ListStreams"
                   - "dynamodb:Scan"
                   - "sqs:DeleteMessage"
                   - "sqs:GetQueueUrl"
                   - "sqs:GetQueueAttributes"
                   - "sns:ListTopics"
                   - "sns:Publish"
                   - "sns:ListTagsForResource"
                   - "apigateway:GET"
                   - "codebuild:ListBuilds"
                   - "codebuild:BatchGetBuilds"
                   - "codebuild:BatchGetProjects"
                   - "s3:ListAllMyBuckets"
                   - "s3:ListBucket"
                   - "s3:Get*"
                   - "s3:List*"
                   - "s3:Describe*"
                   - "s3-object-lambda:Get*"
                   - "s3-object-lambda:List*"
                   - "ec2:CreateNetworkInterface"
                   - "ec2:DescribeNetworkInterfaces"
                   - "ec2:DescribeSubnets"
                   - "ec2:DescribeAddresses"
                   - "ec2:DescribeInstances"
                   - "ec2:AllocateAddress"
                   - "ec2:AssociateAddress"
                   - "ec2:DisassociateAddress"
                   - "ec2:ReleaseAddress"
                   - "ec2:DeleteNetworkInterface"
                   - "ec2:AssignPrivateIpAddresses"
                   - "ec2:UnassignPrivateIpAddresses"
                   - "events:PutEvents" 
                   - "ssm:DescribeInstanceAssociationsStatus"
                   - "states:StartExecution"
                   - "states:ListStateMachines"
                   - "states:ListTagsForResource"
                   - "states:GetExecutionHistory"
                   - "states:ListExecutions"
                   - "ecr-public:GetAuthorizationToken"
                   - "sts:GetServiceBearerToken"
                   - "ecr-public:InitiateLayerUpload"
                   - "ecr-public:UploadLayerPart"
                   - "ecr-public:CompleteLayerUpload" 
                   - "ecr-public:BatchCheckLayerAvailability"
                   - "ecr-public:PutImage" 
                   - "ecr:GetAuthorizationToken"
                   - "ecr:InitiateLayerUpload"
                   - "ecr:UploadLayerPart"
                   - "ecr:CompleteLayerUpload" 
                   - "ecr:BatchCheckLayerAvailability"
                   - "ecr:PutImage" 
                   - "ecr:*"
                 Resource: "*"
               - Effect: "Allow"
                 Action:
                   - "rds:AddTagsToResource"
                   - "rds:ListTagsForResource"
                   - "rds:DescribeDBSnapshots"
                   - "rds:CreateDBSnapshot"
                   - "rds:CopyDBSnapshot"
                   - "rds:DescribeDBInstances"
                   - "rds:CreateDBClusterSnapshot"
                   - "rds:DescribeDBClusters"
                   - "rds:DescribeDBClusterSnapshots"
                   - "rds:CopyDBClusterSnapshot"                 
                 Resource: "*"
               - Effect: "Allow"
                 Action:
                   - "quicksight:*"
                 Resource: "*"
      Roles:
        - !Ref EXPUSERROLE
  EXPCODEBUILDPOLICY:
    Type : "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName : "ExpCodeBuild"
      PolicyDocument:
        Version : "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Resource: "*"
            Action: 
               - logs:CreateLogGroup
               - logs:CreateLogStream
               - logs:PutLogEvents
               - logs:DescribeLogGroups
               - logs:DescribeLogStreams
               - logs:GetLogEvents
               - logs:FilterLogEvents
          - Effect: "Allow"
            Resource: "*"
            Action: 
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketAcl
              - s3:GetBucketLocation
          - Effect: "Allow"
            Action: 
              - codebuild:StartBuild
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codebuild:BatchPutCodeCoverages
            Resource: "*"
      Roles:
        - !Ref EXPUSERROLE
#  EXPINSTPROFILE:
#    Type : "AWS::IAM::InstanceProfile"
#    Properties :
#      InstanceProfileName : "ExpInstProfile"
#      Roles : 
#        - !Ref EXPUSERROLE
Outputs:
   RoleArn:
     Value : !GetAtt EXPUSERROLE.Arn
     Export:
       Name : ROLEARN
   RoleID:
#Below logic extracts the role name from role arn
     Value : !Select 
               - 1
               - !Split
                   - "/"
                   - !GetAtt EXPUSERROLE.Arn
     Export:
       Name : EXPROLEID
#   InstProfileArn:
#     Value : !GetAtt EXPINSTPROFILE.InstanceProfileName
#     Export:
#       Name : EXPINSTPROFILE